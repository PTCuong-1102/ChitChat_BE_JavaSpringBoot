# Production Environment Configuration
server:
  port: ${PORT:8080}

spring:
  main:
    allow-bean-definition-overriding: true
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://ep-empty-snowflake-a1mipsm3-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require}
    username: ${DATABASE_USERNAME:neondb_owner}
    password: ${DATABASE_PASSWORD:npg_sFid7Gfq8DcS}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 2
      idle-timeout: 300000
      connection-timeout: 20000
      
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        connection:
          provider_disables_autocommit: true
  
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
      enabled: true

jwt:
  secret-key: ${JWT_SECRET_KEY:dGhpcyBpcyBhIHNlY3VyZSBqd3Qgc2VjcmV0IGtleSBmb3IgY2hpdGNoYXQgYXBwbGljYXRpb24gd2l0aCBzdWZmaWNpZW50IGxlbmd0aA==}
  expiration: ${JWT_EXPIRATION:3600000}  # 1 hour

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:https://chitchatfereactjs-production.up.railway.app}
  allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
  allowed-headers: "*"
  allow-credentials: true

gemini:
  api-key: ${GEMINI_API_KEY:AIzaSyCcTP3r-KBxe3MwVKxW2opivTBZcu-jXuE}
  api-url: "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent"
  model: "gemini-2.0-flash"

# File Upload Configuration
file:
  upload-dir: ${UPLOAD_DIR:uploads}

# Logging Configuration
logging:
  level:
    root: INFO
    com.chitchat.backend: INFO
    org.springframework.security: WARN
    org.hibernate: WARN
    org.springframework.web.socket: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
  file:
    name: logs/chitchat-backend.log
    max-size: 10MB
    max-history: 30

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
